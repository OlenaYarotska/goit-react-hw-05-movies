{"version":3,"file":"static/js/736.b7d90794.chunk.js","mappings":"2SAEaA,EAAWC,EAAAA,GAAAA,GAAH,8GAORC,EAAWD,EAAAA,GAAAA,GAAH,+GAKRE,EAAQF,EAAAA,GAAAA,IAAH,4DAKLG,EAAOH,EAAAA,GAAAA,EAAH,6DAKJI,EAAQJ,EAAAA,GAAAA,EAAH,0C,SCjBLK,EAAO,WAChB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,2FACjBN,GAAW,GADM,mBAGSO,EAAAA,EAAAA,IAAgBX,GAHzB,OAGPO,EAHO,OAIbC,EAAWD,GAJE,gDAObD,EAAS,EAAD,IACRM,EAAAA,GAAAA,MAAY,wBARC,yBAUbR,GAAW,GAVE,4EAAH,qDAalBM,GACH,GAAE,CAACV,KAGA,gCACKG,IAAW,SAACU,EAAA,EAAD,KACVR,GAASE,IACP,SAACd,EAAD,UACKc,EAAQO,KAAI,SAAAC,GAAM,OACfA,EAAOC,eACH,UAACrB,EAAD,YACI,SAACC,EAAD,CACIqB,IAAG,yCAAoCF,EAAOC,cAC9CE,IAAKH,EAAOI,QAEhB,SAACtB,EAAD,UAAOkB,EAAOI,QACd,UAACrB,EAAD,yBAAmBiB,EAAOK,eANfL,EAAOM,GAFX,QAetC,C,4MCjDKC,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,gCAGd,IAAMC,EAAiB,mCAAG,oGACND,IAAAA,IAAA,sCAAyCD,IADnC,cACvBG,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKdC,EAAe,mCAAG,WAAMP,GAAN,uFACPE,IAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IAD3B,cACxBG,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAMlBG,EAAW,mCAAG,WAAMC,GAAN,uFACAP,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAgDQ,IADhD,cACjBL,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,sDAMXhB,EAAe,mCAAG,WAAMU,GAAN,uFACJE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IADtC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKK,MAFM,2CAAH,sDAKfC,EAAe,mCAAG,WAAMX,GAAN,uFACJE,IAAAA,IAAA,iBAAoBF,EAApB,4BAA0CC,IADtC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/theMovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\ndisplay: flex;\n    flex-wrap: wrap;\n    margin-left: -20px;\n    margin-top:-20px;\n`;\n\nexport const CastItem = styled.li`\n    flex-basis: calc(100% / 5 - 20px);\n    margin-left: 20px;\n    margin-top: 20px;\n`;\nexport const Photo = styled.img`\nheight: 300px;\nobject-fit: cover;\n`;\n\nexport const Name = styled.p`\nfont-size: 20px;\nfont-weight: 500;\n`;\n\nexport const Descr = styled.p`\nfont-size: 18px;\n`;\n","import { useParams } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { getMovieCredits } from \"services/theMovieApi\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { CastList, CastItem, Photo, Name, Descr } from \"./Cast.styled\";\n\nexport const Cast = () => {\n    const { movieId } = useParams();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [credits, setCredits] = useState([]);\n\n    useEffect(() => {\n        const fetchCredits = async () => {\n            setLoading(true);\n            try {\n                const credits = await getMovieCredits(movieId);\n                setCredits(credits);\n                \n            } catch (error) {\n                setError(error)\n                toast.error('Something went wrong')\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchCredits();\n    }, [movieId]);\n\n    return (\n        <>\n            {loading && <Loader />}\n            {!error && credits && (\n                <CastList>\n                    {credits.map(credit => (\n                        credit.profile_path && (\n                            <CastItem key={credit.id}>\n                                <Photo\n                                    src={`https://image.tmdb.org/t/p/w300${credit.profile_path}`}\n                                    alt={credit.name}\n                                />\n                                <Name>{credit.name}</Name>\n                                <Descr>Character: {credit.character}</Descr>\n                            </CastItem>\n                        )))}\n                </CastList>\n            )}\n        </>\n    );\n};\n\n","import axios from 'axios';\nconst key = 'e61d61238bf5efa24cb2963b7b46b5dc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n    export const getTrendingMovies = async() => {\n        const response = await axios.get(`/trending/movie/day?api_key=${key}`);\n        return response.data.results;\n      \n};\n       export const getMovieDetails = async id => {\n        const response = await axios.get(`/movie/${id}?api_key=${key}`);\n        return response.data;\n    };\n\n\n    export const searchMovie = async query => {\n        const response = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n        return response.data.results;\n    };\n\n\n    export const getMovieCredits = async id => {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n        return response.data.cast;\n    };\n\n    export const getMovieReviews = async id => {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${key}`);\n        return response.data.results;\n    };"],"names":["CastList","styled","CastItem","Photo","Name","Descr","Cast","movieId","useParams","useState","loading","setLoading","error","setError","credits","setCredits","useEffect","fetchCredits","getMovieCredits","toast","Loader","map","credit","profile_path","src","alt","name","character","id","key","axios","getTrendingMovies","response","data","results","getMovieDetails","searchMovie","query","cast","getMovieReviews"],"sourceRoot":""}