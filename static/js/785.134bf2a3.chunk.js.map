{"version":3,"file":"static/js/785.134bf2a3.chunk.js","mappings":"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","sources":["Pages/MoviesPage/MoviesPage.styled.jsx","Pages/MoviesPage/MoviesPage.jsx","components/MoviesMarkup/MoviesMarkup.styled.jsx","components/MoviesMarkup/MoviesMarkup.jsx","services/theMovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 30px;\n`;\nexport const Input = styled.input`\n    width: 300px;\n    height: 60px;\n    padding-left: 15px;\n    border: 1px solid rgba(32, 33, 32, 0.2);\n    border-radius: 5px 0 0 5px;\n    font-size: 18px;\n    &:focus {\n        outline-color: #5c43b9;\n    }\n   &::placeholder {\n    color: #646464;\n    font-size: 18px;\n    font-weight: 500;\n }\n`;\n\nexport const Button = styled.button`\n    border: none;\n    border-radius: 0 5px 5px 0;\n    outline: none;\n    height: 63px;\n    padding: 10px 20px;\n    background-color:  #5c43b9;\n    cursor: pointer;\n    font-size: 20px;\n    font-weight: 700;\n    &:hover,\n    &:focus {\n        background-color: #3e288f;\n        color: #fff;\n        transition: opacity 250ms;\n        -webkit-box-shadow: 0px 10px 13px -7px #000000, 3px 8px 24px 3px rgba(0,0,0,0); \n        box-shadow: 0px 10px 13px -7px #000000, 4px 9px 25px 4px rgba(0,0,0,0);\n    }\n`;","import { MoviesMarkup } from \"components/MoviesMarkup/MoviesMarkup\";\nimport { useState, useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { searchMovie } from \"services/theMovieApi\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Form, Input, Button } from \"./MoviesPage.styled\";\n\nexport const MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (!query) {\n            return\n        };\n\n        const fetchMoviesBySearch = async () => {\n            setLoading(true);\n            try {\n                const moviesResponse  = await searchMovie(query);\n                if (moviesResponse.length === 0) {\n                    return toast.error('No movies found')\n                }\n                setMovies(moviesResponse);\n            }\n            catch (error) {\n                setError(error);\n                toast.error('Something went wrong');\n            } finally {\n                setLoading(false);\n            }\n        }\n        fetchMoviesBySearch();\n\n    }, [query])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (searchQuery.trim() === '') {\n            return toast.error('Type your search request')\n        }\n        setSearchParams({ query: searchQuery });\n        setSearchQuery('');\n    };\n\n    const handleChange = (e) => {\n        const searchRequest = e.currentTarget.value.toLowerCase().trim();\n        setSearchQuery(searchRequest);\n    };\n \n    return (\n        <>\n        <Form onSubmit={handleSubmit}>\n                <Input\n                    onChange={handleChange}\n                    value={searchQuery}\n                    type=\"text\"\n                    placeholder=\"search movies\"\n                >\n                </Input>\n            <Button type=\"submit\">Search</Button>\n        </Form>\n            {loading && <Loader />}\n            {!error && movies && <MoviesMarkup movies={movies} />}\n        </>\n    )  \n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -20px;\n    margin-top:-20px;\n`;\n\nexport const Item = styled.li`\nflex-basis: calc(100% / 4 - 20px);\n    margin-left: 20px;\n    margin-top: 20px;\n`;\n\nexport const Poster = styled.img`\n    box-shadow: 5px 5px 15px 5px rgba(204, 88, 71, 0.2);\n    transition: all .2s ease-in-out;\n    margin-bottom: 13px;\n    &:hover,\n    &:focus {\n    box-shadow: 5px 5px 10px 2px rgba(8, 8, 8, 0.5);\n    transform: scale(1.05);\n  }\n`;\n\nexport const Title = styled.span`\n    font-size: 28px;\n    font-weight: 500;\n    color: #110101;\n    &:hover {\n        color: #5c43b9;\n    }\n`;","import { NavLink } from \"react-router-dom\";\nimport { List, Item, Poster, Title} from \"./MoviesMarkup.styled\";\n\nexport const MoviesMarkup = ({ movies }) => {\n    return (\n            <List>\n            {movies.map(movie =>(\n                <Item key={movie.id}>\n                    <NavLink to={`/movies/${movie.id}`}>\n                        <Poster src={'https://image.tmdb.org/t/p/w500/' + movie.poster_path} alt={movie.title} />\n                        <Title>{movie.title}</Title>\n                    </NavLink>\n                </Item>\n            ))}\n        </List>\n    )\n};","import axios from 'axios';\nconst key = 'e61d61238bf5efa24cb2963b7b46b5dc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\n    export const getTrendingMovies = async() => {\n        const response = await axios.get(`/trending/movie/day?api_key=${key}`);\n        return response.data.results;\n      \n};\n       export const getMovieDetails = async id => {\n        const response = await axios.get(`/movie/${id}?api_key=${key}`);\n        return response.data;\n    };\n\n\n    export const searchMovie = async query => {\n        const response = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n        return response.data.results;\n    };\n\n\n    export const getMovieCredits = async id => {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n        return response.data.cast;\n    };\n\n    export const getMovieReviews = async id => {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${key}`);\n        return response.data.results;\n    };"],"names":["Form","styled","Input","Button","MoviesPage","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","searchQuery","setSearchQuery","loading","setLoading","error","setError","useEffect","fetchMoviesBySearch","searchMovie","moviesResponse","length","toast","onSubmit","e","preventDefault","trim","onChange","searchRequest","currentTarget","value","toLowerCase","type","placeholder","Loader","MoviesMarkup","List","Item","Poster","Title","map","movie","to","id","src","poster_path","alt","title","key","axios","getTrendingMovies","response","data","results","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}